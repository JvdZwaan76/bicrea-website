// Bicrea Website - Production Ready JavaScript
// Optimized for performance and mobile experience

document.addEventListener('DOMContentLoaded', function() {
    'use strict';
    
    // Performance optimizations
    const isReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
    
    // Navigation functionality
    initializeNavigation();
    
    // Scroll-based animations and effects
    initializeScrollEffects();
    
    // Interactive elements
    initializeInteractiveElements();
    
    // Page-specific initialization
    initializePageSpecific();
    
    // Performance monitoring
    if ('performance' in window) {
        window.addEventListener('load', () => {
            console.log('Bicrea website loaded successfully');
        });
    }
    
    function initializeNavigation() {
        const navToggle = document.getElementById('navToggle');
        const navMenu = document.getElementById('navMenu');
        
        if (navToggle && navMenu) {
            navToggle.addEventListener('click', function() {
                navMenu.classList.toggle('active');
                navToggle.classList.toggle('active');
                
                // Prevent scroll when menu is open on mobile
                if (navMenu.classList.contains('active')) {
                    document.body.style.overflow = 'hidden';
                } else {
                    document.body.style.overflow = '';
                }
            });
            
            // Close menu when clicking outside
            document.addEventListener('click', function(e) {
                if (!navToggle.contains(e.target) && !navMenu.contains(e.target)) {
                    navMenu.classList.remove('active');
                    navToggle.classList.remove('active');
                    document.body.style.overflow = '';
                }
            });
        }
        
        // Smooth scrolling for anchor links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    const headerOffset = 100;
                    const elementPosition = target.offsetTop;
                    const offsetPosition = elementPosition - headerOffset;
                    
                    window.scrollTo({
                        top: offsetPosition,
                        behavior: 'smooth'
                    });
                    
                    // Close mobile menu if open
                    if (navMenu && navMenu.classList.contains('active')) {
                        navMenu.classList.remove('active');
                        navToggle.classList.remove('active');
                        document.body.style.overflow = '';
                    }
                }
            });
        });
        
        // Active navigation state
        const navLinks = document.querySelectorAll('.nav-link');
        const sections = document.querySelectorAll('section[id]');
        
        if (sections.length > 0 && navLinks.length > 0) {
            const updateActiveNav = throttle(() => {
                let current = '';
                sections.forEach(section => {
                    const sectionTop = section.offsetTop;
                    if (window.pageYOffset >= sectionTop - 200) {
                        current = section.getAttribute('id');
                    }
                });
                
                navLinks.forEach(link => {
                    link.classList.remove('active');
                    if (link.getAttribute('href') === `#${current}`) {
                        link.classList.add('active');
                    }
                });
            }, 100);
            
            window.addEventListener('scroll', updateActiveNav);
        }
    }
    
    function initializeScrollEffects() {
        // Navbar scroll effect
        const navbar = document.querySelector('.navbar');
        if (navbar) {
            const handleScroll = throttle(() => {
                if (window.scrollY > 100) {
                    navbar.classList.add('scrolled');
                } else {
                    navbar.classList.remove('scrolled');
                }
            }, 10);
            
            window.addEventListener('scroll', handleScroll);
        }
        
        // Intersection Observer for animations
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };
        
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('in-view');
                    
                    // Trigger counter animations for stats
                    if (entry.target.classList.contains('stat-number')) {
                        animateCounter(entry.target);
                    }
                }
            });
        }, observerOptions);
        
        // Observe elements for scroll animations
        document.querySelectorAll('.animate-on-scroll, .stat-number').forEach(el => {
            observer.observe(el);
        });
        
        // Parallax effect for hero (if not reduced motion)
        if (!isReducedMotion) {
            const hero = document.querySelector('.hero');
            if (hero) {
                const handleParallax = throttle(() => {
                    const scrolled = window.pageYOffset;
                    const parallax = scrolled * 0.5;
                    hero.style.transform = `translateY(${parallax}px)`;
                }, 16);
                
                window.addEventListener('scroll', handleParallax);
            }
        }
        
        // Scroll progress indicator
        createScrollProgress();
    }
    
    function initializeInteractiveElements() {
        // Enhanced image loading
        initializeLazyLoading();
        
        // Button interactions
        initializeButtonEffects();
        
        // Hover effects for cards
        initializeHoverEffects();
        
        // Form handling
        initializeFormHandling();
    }
    
    function initializeLazyLoading() {
        const images = document.querySelectorAll('img[loading="lazy"]');
        
        if ('IntersectionObserver' in window) {
            const imageObserver = new IntersectionObserver((entries, observer) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        const img = entry.target;
                        
                        // Handle image load error
                        img.addEventListener('error', function() {
                            this.style.display = 'none';
                            console.warn('Failed to load image:', this.src);
                        });
                        
                        img.addEventListener('load', function() {
                            this.classList.add('loaded');
                        });
                        
                        // If image already loaded (cached)
                        if (img.complete) {
                            img.classList.add('loaded');
                        }
                        
                        observer.unobserve(img);
                    }
                });
            });
            
            images.forEach(img => imageObserver.observe(img));
        } else {
            // Fallback for older browsers
            images.forEach(img => {
                img.classList.add('loaded');
            });
        }
    }
    
    function initializeButtonEffects() {
        const buttons = document.querySelectorAll('.btn');
        
        buttons.forEach(button => {
            // Ripple effect
            button.addEventListener('click', function(e) {
                if (isReducedMotion) return;
                
                const ripple = document.createElement('span');
                const rect = this.getBoundingClientRect();
                const size = Math.max(rect.width, rect.height);
                const x = e.clientX - rect.left - size / 2;
                const y = e.clientY - rect.top - size / 2;
                
                ripple.style.cssText = `
                    position: absolute;
                    border-radius: 50%;
                    background: rgba(255, 255, 255, 0.3);
                    transform: scale(0);
                    animation: ripple 0.6s linear;
                    width: ${size}px;
                    height: ${size}px;
                    left: ${x}px;
                    top: ${y}px;
                    pointer-events: none;
                `;
                
                this.style.position = 'relative';
                this.style.overflow = 'hidden';
                this.appendChild(ripple);
                
                setTimeout(() => {
                    if (ripple.parentNode) {
                        ripple.remove();
                    }
                }, 600);
            });
        });
    }
    
    function initializeHoverEffects() {
        const hoverElements = document.querySelectorAll(
            '.team-member, .value-item, .mission-card, .vision-card, .service-card, .stat-item'
        );
        
        hoverElements.forEach(element => {
            if (isReducedMotion) return;
            
            element.addEventListener('mouseenter', function() {
                this.style.willChange = 'transform';
            });
            
            element.addEventListener('mouseleave', function() {
                this.style.willChange = 'auto';
            });
        });
    }
    
    function initializeFormHandling() {
        const forms = document.querySelectorAll('form');
        
        forms.forEach(form => {
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                
                // Basic form validation
                const requiredFields = this.querySelectorAll('[required]');
                let isValid = true;
                
                requiredFields.forEach(field => {
                    if (!field.value.trim()) {
                        isValid = false;
                        field.style.borderColor = '#ff4444';
                    } else {
                        field.style.borderColor = '';
                    }
                });
                
                if (isValid) {
                    // Show success message
                    showNotification('Thank you! We will get back to you soon.', 'success');
                    this.reset();
                } else {
                    showNotification('Please fill in all required fields.', 'error');
                }
            });
        });
    }
    
    function initializePageSpecific() {
        const currentPage = window.location.pathname;
        
        if (currentPage.includes('about') || currentPage === '/') {
            initializeAboutPage();
        }
        
        // Mobile optimizations
        initializeMobileOptimizations();
    }
    
    function initializeAboutPage() {
        // Staggered animations for team members
        const teamMembers = document.querySelectorAll('.team-member');
        teamMembers.forEach((member, index) => {
            if (!isReducedMotion) {
                member.style.animationDelay = `${index * 0.2}s`;
            }
        });
        
        // Stats counter initialization
        const statNumbers = document.querySelectorAll('.stat-number');
        statNumbers.forEach(stat => {
            stat.style.opacity = '0';
        });
    }
    
    function initializeMobileOptimizations() {
        // Touch optimizations
        if ('ontouchstart' in window) {
            document.body.classList.add('touch-device');
        }
        
        // Viewport height fix for mobile
        const setVH = () => {
            const vh = window.innerHeight * 0.01;
            document.documentElement.style.setProperty('--vh', `${vh}px`);
        };
        
        setVH();
        window.addEventListener('resize', debounce(setVH, 100));
        
        // Prevent zoom on input focus (iOS)
        const inputs = document.querySelectorAll('input, select, textarea');
        inputs.forEach(input => {
            input.addEventListener('focus', function() {
                this.style.fontSize = '16px';
            });
        });
    }
    
    // Counter animation function
    function animateCounter(element) {
        if (element.classList.contains('animated')) return;
        element.classList.add('animated');
        
        const text = element.textContent;
        const number = parseFloat(text.replace(/[^0-9.]/g, ''));
        
        let target = number;
        if (text.includes('B')) target = number;
        else if (text.includes('M')) target = number;
        else if (text.includes('K')) target = number;
        else if (text.includes('%')) target = number;
        else if (text.includes('+')) target = number;
        
        let start = 0;
        const duration = 2000;
        const increment = target / (duration / 16);
        
        element.style.opacity = '1';
        element.textContent = '0';
        
        const timer = setInterval(() => {
            start += increment;
            if (start >= target) {
                element.textContent = text; // Restore original text
                clearInterval(timer);
            } else {
                element.textContent = Math.floor(start) + (text.includes('+') ? '+' : '');
            }
        }, 16);
    }
    
    // Utility functions
    function throttle(func, wait) {
        let timeout;
        return function executedFunction(...args) {
            const later = () => {
                clearTimeout(timeout);
                func(...args);
            };
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
        };
    }
    
    function debounce(func, wait) {
        let timeout;
        return function executedFunction(...args) {
            const later = () => {
                clearTimeout(timeout);
                func(...args);
            };
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
        };
    }
    
    function createScrollProgress() {
        const progressBar = document.createElement('div');
        progressBar.className = 'scroll-progress';
        progressBar.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 0%;
            height: 3px;
            background: linear-gradient(90deg, #d4af37, #f4d03f);
            z-index: 9999;
            transition: width 0.1s ease;
        `;
        document.body.appendChild(progressBar);
        
        const updateProgress = throttle(() => {
            const winScroll = document.body.scrollTop || document.documentElement.scrollTop;
            const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;
            const scrolled = (winScroll / height) * 100;
            progressBar.style.width = scrolled + '%';
        }, 10);
        
        window.addEventListener('scroll', updateProgress);
    }
    
    function showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.className = `notification notification-${type}`;
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: ${type === 'success' ? '#d4af37' : '#ff4444'};
            color: ${type === 'success' ? '#0a0a0a' : 'white'};
            padding: 1rem 2rem;
            border-radius: 50px;
            z-index: 10000;
            opacity: 0;
            transform: translateY(-20px);
            transition: all 0.3s ease;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        `;
        notification.textContent = message;
        
        document.body.appendChild(notification);
        
        // Animate in
        setTimeout(() => {
            notification.style.opacity = '1';
            notification.style.transform = 'translateY(0)';
        }, 100);
        
        // Animate out and remove
        setTimeout(() => {
            notification.style.opacity = '0';
            notification.style.transform = 'translateY(-20px)';
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.remove();
                }
            }, 300);
        }, 3000);
    }
    
    // Add dynamic styles
    const style = document.createElement('style');
    style.textContent = `
        @keyframes ripple {
            to {
                transform: scale(4);
                opacity: 0;
            }
        }
        
        .navbar.scrolled {
            background: rgba(10, 10, 10, 0.98);
            box-shadow: 0 2px 20px rgba(212, 175, 55, 0.1);
        }
        
        .nav-toggle.active span:nth-child(1) {
            transform: rotate(45deg) translate(5px, 5px);
        }
        
        .nav-toggle.active span:nth-child(2) {
            opacity: 0;
        }
        
        .nav-toggle.active span:nth-child(3) {
            transform: rotate(-45deg) translate(7px, -6px);
        }
        
        .touch-device .btn:hover {
            transform: none;
        }
        
        .animate-on-scroll {
            transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        }
        
        .animate-on-scroll.in-view {
            opacity: 1;
            transform: translateY(0) scale(1);
        }
        
        @media (prefers-reduced-motion: reduce) {
            * {
                animation-duration: 0.01ms !important;
                animation-iteration-count: 1 !important;
                transition-duration: 0.01ms !important;
            }
            
            .scroll-progress {
                display: none;
            }
        }
        
        /* Mobile optimizations */
        @media (max-width: 768px) {
            .hero {
                min-height: 100vh;
                min-height: calc(var(--vh, 1vh) * 100);
            }
            
            .page-header {
                min-height: 50vh;
                min-height: calc(var(--vh, 1vh) * 50);
            }
        }
        
        /* Performance improvements */
        .will-change {
            will-change: transform;
        }
        
        /* Focus styles for accessibility */
        .btn:focus,
        .nav-link:focus {
            outline: 2px solid #d4af37;
            outline-offset: 2px;
        }
        
        /* Loading states */
        .loading {
            position: relative;
            pointer-events: none;
        }
        
        .loading::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 20px;
            height: 20px;
            border: 2px solid #d4af37;
            border-top: 2px solid transparent;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            transform: translate(-50%, -50%);
        }
        
        @keyframes spin {
            0% { transform: translate(-50%, -50%) rotate(0deg); }
            100% { transform: translate(-50%, -50%) rotate(360deg); }
        }
    `;
    document.head.appendChild(style);
    
    // Initialize error handling
    window.addEventListener('error', function(e) {
        console.warn('JavaScript error caught:', e.error);
    });
    
    // Performance monitoring
    if ('PerformanceObserver' in window) {
        const observer = new PerformanceObserver((list) => {
            for (const entry of list.getEntries()) {
                if (entry.entryType === 'largest-contentful-paint') {
                    console.log('LCP:', entry.startTime);
                }
            }
        });
        observer.observe({entryTypes: ['largest-contentful-paint']});
    }
    
    console.log('Bicrea website JavaScript initialized successfully');
});
